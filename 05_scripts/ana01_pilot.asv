%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%                     
%
%      Distribution parameters time& force
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Data: Walking on the moon (Clint Hansen, Neurogeriatrie, UKSH Kiel,University of Kiel)
% Author: Julius Welzel (Neurogeriatrie, UKSH Kiel,University of Kiel)
% Contact: c.hansen@neurologie.uni-kiel.de & j.welzel@neurologie.uni-kiel.de
% Version: 1.0 // setting up default (30.08.2019)

clc;close all;clear all;

%% Set MAIN path  and load data 
MAIN = 'C:\Users\juliu\Desktop\NG_kiel\moonwalk_CliH\';
PATHIN_data = [MAIN '04_data\00_rawdata\']; %make sure to use \\ instead of \
PATHOUT_data = [MAIN '04_data\01_pilot\'];
addpath(genpath(MAIN));
if ~exist(PATHOUT_data);mkdir(PATHOUT_data);end

list = dir(fullfile(PATHIN_data));

idx_moon= find(contains({list.name},'raw_data'),1); % find the raw flesh
dat_moon = readtable([PATHIN_data list(idx_moon).name],'Sheet','Sheet1');

%% Disttribution params
vars_idp = {'AlterG_BW','Speed','Gradient'};
cb_names = {'cool','spring','summer'};

for i = 1:numel(vars_idp)
   fact_idp(i).cat = unique(dat_moon{:,strcmp(dat_moon.Properties.VariableNames,vars_idp{i})});
   fact_idp(i).size = length(fact_idp(i).cat);
   fact_idp(i).name = vars_idp{i};
end

for i = 1:numel(vars_idp)
    
    figure
    fct_dat = dat_moon{:,strcmp(dat_moon.Properties.VariableNames,vars_idp{i})};
    
    time = nanmean([dat_moon.AvgContactTimeLeft_ms_,dat_moon.AvgContactTimeRight_ms_],2);
    force = nanmean([dat_moon.ForceNormBWLeft,dat_moon.ForceNrmBWRight],2);
    subplot(p(1),p(2),f)
    c_map = colormap(cb_names{i});
    c_idx = ceil(linspace(1,length(c_map),fact_idp(i).size));
    scatterhist(time,force,'Group',dat_moon{:,strcmp(dat_moon.Properties.VariableNames,vars_idp{i})},'Color',c_)
   
end
% Kurtosis
x_val = linspace(min(min(z_top)),max(max(z_top)),length(area_z_t_avg));
kurt = round(kurtosis(area_z_t_avg,[],1),1);
skew = round(skewness(area_z_t_avg,[],1),1);

%age diff
kurt_o = round(kurtosis(area_z_t_avg(old,i_o),[],1),1);
skew_o = round(skewness(area_z_t_avg(old,i_o),[],1),1);
kurt_y = round(kurtosis(area_z_t_avg(young,i_y),[],1),1);
skew_y = round(skewness(area_z_t_avg(young,i_y),[],1),1);

c_idx = ceil(linspace(56,9,n_intersect));

    p = numSubplots(fact_idp(i).size); % for subplot config

figure
for i = 1:size(area_z_t_avg,2)
    subplot(p(1),p(2),i)
    %plot dist old
    h_o = histfit(area_z_t_avg(old,i));
    h_o(1).FaceColor = c_o_map(c_idx(i),:);
    h_o(2).Color = c_o_map(c_idx(i),:);
    h_o(1).FaceAlpha = 0.5;
    h_o(1).EdgeColor = 'none';
    hold on
    
    %plot dist young
    h_y = histfit(area_z_t_avg(young,i));
    h_y(1).FaceColor = c_y_map(c_idx(i),:);
    h_y(2).Color = c_y_map(c_idx(i),:);
    h_y(1).FaceAlpha = 0.5;
    h_y(1).EdgeColor = 'none';
    hold on
    
    %add title & legend info
    legend([h_o(2) h_y(2)],{'Old','Young'},'Location','best');
    legend boxoff
    title (['K: ' num2str(kurt(i)) ' / S: ' num2str(skew(i))]);

end

pic_r = 1/1.3;
save_fig(gcf,PATHOUT_TOODIFF,['dist_surf_area_' FB{fb}],'fontsize',8,'figsize',[0 0 22.7 pic_r*22.7]);
save([PATHOUT_TOODIFF 'dist_param_' FB{fb} '.mat'],'kurt_o','skew_o','kurt_y','skew_y')